The Blender X3D exporter with Kambi (Michalis Kamburelis)
fixes and modifications.

The idea is that you can replace your installed
blender/2.64/scripts/addons/io_scene_x3d/export_x3d.py
with my version.

Based on 2.64 version currently (I'll try to keep up and always base
on newest releaed Blender version). I also keep the original version here,
to easily see my modifications
(diff -u export_x3d_distributed.py export_x3d.py)
and apply my modifications to next releases
(diff -u export_x3d_distributed.py export_x3d.py  > a.patch
 cp -f ...new_blender_release.../export_x3d.py export_x3d.py
 patch export_x3d.py  < a.patch
 (assuming of course they can be applied automatically, i.e. the code
 around them didn't change upstream)).

------------------------------------------------------------------------------
Blender exporter usage notes (apply to both Blender distributed X3D
exporter and my modified version):

- Backface culling: latest exporter honours the "Game Settings->Backface Culling"
  settings in the material. (Switch to "Game Mode" to see this checkbox.)

Normals and smoothing:
- "Smooth" on the whole mesh,
  "Auto Smooth" checkbox and "Angle" are correctly exported.
  (Original exporter ignores the "Auto Smooth" checkbox, but we fix
  it in our version and the patch is submitted to Blender.)

- Make sure you marked all the faces (the whole object) as "Smooth"
  (as "Smooth" actually means: 1. display smooth in OpenGL,
  2. for rendering and exporting use Auto Smooth.)

- Although normals are not explicitly exported, but Blender's
  controls to recalculate normals ("Recalculate" (Ctrl+N, Ctrl+Shift+N
  for inside), "Flip Normals") still should be used. They actually reorder
  the vertexes of faces consistently, which is needed for X3D browser
  to recalculate normals consistently from given side.

- This above is especially important since exported geometry by default
  is visible only from one side (they one where normals point out in Blender,
  i.e. ordered CCW in both Blender and X3D). You can make it two-sided:
  you have to add UV texture, and mark texture faces as "two side".

Collisions:
- By default geometry is not collidable. To make it collidable,
  add UV texture and mark (any face, but to be future-proof
  it's probably best to mark them all) as "Collidable".

Many textures / materials on mesh:
- Released Blender still cannot cope with various materials
  and textures on the same mesh. The most sane way is to split mesh
  by materials right before exporting.
  (Later: this is fixed in later Blender.)

  Go into edit mode, separate (P) by materials.
  Then, since the distributed exporter only looks at first material,
  you have to delete unused materials from created meshes. Such that
  each mesh has only one material.

  Remember that you usually don't want to save such splitted mesh
  (later modifying it is more difficult). Just don't save /
  or undo the splitting / or join parts again.

- If you also have multiple textures, I found it easiest
  to use different materials under a different textures ---
  this way splitting by materials also splits by textures.
  So you may want to add as many materials as you have textures,
  and assign them to the same faces. If you don't want to color your
  textures, then just leave materials with grayscale (e.g. white) colors.
  Since it's easy to select faces with the same materials,
  this way you also get a simple way of selecting faces with given texture.

- If you want to export textures, you either have to select "Face Textures"
  or assign an image texture to material. The first option sucks,
  since then material is ignored. So in practice you have to assign
  to materials the same textures that you already assigned in UV mode.

- In Blender >= 2.57, original Blender exporter generates
  very nice image URLs. The actual image filename in Blender is used,
  and three alternative URLs are generated in X3D file (relative to output dir,
  basename, absolute). This makes our previous image url fixes obsolete, good.

  You usually want to make sure to check "Relative paths"
  when choosing the texture, and depend on the 1st URL (path relative
  to output dir) to be correct.

------------------------------------------------------------------------------
Kambi changes:

- We apply my patches:
  http://projects.blender.org/tracker/index.php?func=detail&aid=30572&group_id=9&atid=127
  http://projects.blender.org/tracker/index.php?func=detail&aid=33138&group_id=9&atid=127
  http://projects.blender.org/tracker/index.php?func=detail&aid=33145&group_id=9&atid=127

- We automatically check for existence of normalmap file for bump mapping:
  we take normal texture filename (like "textures/image.png"),
  add "_normalmap" right before extension (making e.g. "textures/image_normalmap.png"),
  and look if it exists relative to your exported filename dir.
  So in the above example, you want to have exported X3D model to be in
  the same directory as "textures" (and "textures" should contain
  image.png and image_normalmap.png).
  If such file is found, we use it
  (http://castle-engine.sourceforge.net/x3d_extensions.php#section_ext_bump_mapping).
  This requires "Castle Game Engine" extensions for bump mapping,
  so open e.g. with view3dscene.

- Old (already present in Blender up-stream):
  http://projects.blender.org/tracker/index.php?func=detail&aid=30580&group_id=9&atid=127
------------------------------------------------------------------------------
Development notes:

Blender original scripts are in SVN repository here:
https://svn.blender.org/svnroot/bf-extensions/trunk/py/scripts/addons

Web access is through:
http://projects.blender.org/scm/viewvc.php/trunk/py/scripts/addons/?root=bf-extensions
In particular, X3D exporter is on:
http://projects.blender.org/scm/viewvc.php/trunk/py/scripts/addons/io_scene_x3d/export_x3d.py?root=bf-extensions

Bugs should be reported to "Bleder 2.5 Bug Tracker"
http://projects.blender.org/tracker/?func=browse&group_id=9&atid=498
Like this:
http://projects.blender.org/tracker/?group_id=9&atid=498&func=detail&aid=26220

Patches may go to patches tracker:
http://projects.blender.org/tracker/?atid=127&group_id=9&func=browse
